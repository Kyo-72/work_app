void TAtest1-1()
{
    struct graph *g = create_graph();

    struct vertex *v0 = add_vertex(g, '0');
    struct vertex *v1 = add_vertex(g, '1');
    struct vertex *v2 = add_vertex(g, '2');
    struct vertex *v3 = add_vertex(g, '3');
    struct vertex *v4 = add_vertex(g, '4');
    struct vertex *v5 = add_vertex(g, '5');

    add_edge(g, v0, v1);
    add_edge(g, v0, v2);
    add_edge(g, v2, v3);
    add_edge(g, v3, v2);
    add_edge(g, v3, v4);
    add_edge(g, v4, v2);
    add_edge(g, v4, v5);
    add_edge(g, v5, v5);

    print_matrix(g);
    print_list(g);

    check_consistency(g);

    printf("Success: %s\n", __func__);
}


void TAtest1-2()
{
    struct graph *g = create_graph();

    struct vertex *v0 = add_vertex(g, '0');
    struct vertex *v1 = add_vertex(g, '1');
    struct vertex *v2 = add_vertex(g, '2');
    struct vertex *v3 = add_vertex(g, '3');
    struct vertex *v4 = add_vertex(g, '4');
    struct vertex *v5 = add_vertex(g, '5');

    add_edge(g, v0, v0);
    add_edge(g, v0, v1);
    add_edge(g, v0, v2);
    add_edge(g, v0, v3);
    add_edge(g, v0, v4);
    add_edge(g, v0, v5);
    add_edge(g, v1, v2);
    add_edge(g, v2, v1);
    add_edge(g, v2, v2);
    add_edge(g, v3, v3);
    add_edge(g, v3, v1);
    add_edge(g, v4, v1);
    add_edge(g, v4, v3);
    add_edge(g, v4, v5);
    add_edge(g, v5, v3);
    add_edge(g, v5, v4);

    print_matrix(g);
    print_list(g);

    check_consistency(g);

    printf("Success: %s\n", __func__);
}